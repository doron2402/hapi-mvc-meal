var _ = require('lodash')
  , fs = require('fs')
  , Hapi = require('hapi')
  , LessCooker = require('./Cooker/Less')
  , StylusCooker = require('./Cooker/Stylus');

/**
 * Assets Cooker
 * @type {Function}
 */
var Cooker = module.exports = function Cooker(app, doneCallback) {
  this._app = app;
  this.updateApp();
  this.doneCallback = doneCallback;
  return this;
};

_.extend(
  Cooker.prototype,
  {
    cook: function () {
      this.routeCssResources();
      var self = this;
      var globalCallback = function () {
        if ((!self._app.settings.app.assets.less || lessDone)
        && (!self._app.settings.app.assets.stylus || stylusDone)) {
          self.doneCallback();
        }
      }
      if (this._app.settings.app.assets.less) {
        var lessDone = false;
        new LessCooker(
          this._app,
          function () {
            lessDone = true;
            globalCallback();
          }
        ).cook();
      }
      if (this._app.settings.app.assets.stylus) {
        var stylusDone = false;
        new StylusCooker(
          this._app,
          function () {
            stylusDone = true;
            globalCallback();
          }
        ).cook();
      }
    },

    routeCssResources: function () {
      var self = this;
      this._app.routes.push({
        method: 'GET',
        path: this._app.resources.css.route + '{hash}',
        handler: self.cssRouteHandler.bind(self),
        config: {
          auth: false,
          plugins: { yar: false, crumb: false, hapi18n: false, friendlyErrors: false }
        }
      });
    },

    cssRouteHandler: function (request) {
      var type = request.params.type;
      var css = this._app.resources.css.content[request.params.hash];
      if (css) {
        request.reply(
          this._app.resources.css.content[request.params.hash]
        ).type(
          'text/css'
        );
      } else {
        var error = Hapi.error.notFound('Asset file has not been found');
        error.response.type = 'text/css';
        request.reply(error);
      }
    },

    updateApp: function () {
      this._app.resources = {};
      this._app.resources.css = {};
      this._app.resources.css.route = '/assets/css/';
      this._app.resources.css.content = {};
      this._app.resources.css.path = {};
      this._app.resources.css.get = function(file) {
        var path = '';
        var hash = this.resources.css.path[file];
        if (hash) {
          path = this.resources.css.route.replace('{type}', 'css') + hash;
        }
        return path;
      }.bind(this._app);
    }
  }
);
