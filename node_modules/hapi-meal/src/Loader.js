var _ = require('lodash')
  , fs = require('fs');

/**
 * Router
 * @type {Function}
 */
var Loader = module.exports = function Loader(application) {
  this._app = application;
};

_.extend(
  Loader.prototype,
  {

    findModels: function (callback) {
      this.walkDir(
        'models',
        this._app.settings.app.path + '/models/',
        null, callback
      );
    },

    findControllers: function (callback) {
      this.walkDir(
        'controllers',
        this._app.settings.app.path + '/controllers/',
        null, callback
      );
    },

    initialize: function () {
      var hasControllers, ctlrClass;
      this._app.appRoutes = [];
      // Register models
      for (var name in this._app.models) {
        if (this._app.models[name]) {
          this._app.models[name] = new require(this._app.models[name])();
        }
      }
      // Set controllers
      hasControllers = false;
      for (name in this._app.controllers) {
        hasControllers = true;
        ctlrClass = require(this._app.controllers[name]);
        this._app.controllers[name] = new ctlrClass(
          this._app,
          {
            name: name
          }
        );
      }
      return this;
    },

    walkDir: function(type, dir, processFn, callback) {
      var self = this;
      this._app[type] = {};
      fs.readdir(dir, function (err, files) {
        if (files && files.length) {
          files.forEach(function (file) {
            if (file[0] !== '.') {
              var fileName = file.replace('.js', '');
              console.log('Registering ' + type + ': "' + fileName + '"');
              self._app[type][fileName] = dir + '/' + file;
            }
          });
        }
        if (typeof processFn === 'function') {
          _.each(self._app[type], processFn);
        }
        callback();
      });
    }
  }
);
